// Auto-generated with: android/scripts/gen-entries.py --mode=functions distrib/android-emugl/host/libs/Translator/GLcommon/gles1_only.entries --output=distrib/android-emugl/host/libs/Translator/include/GLcommon/gles1_only_functions.h
// DO NOT EDIT THIS FILE

#ifndef GLES1_ONLY_FUNCTIONS_H
#define GLES1_ONLY_FUNCTIONS_H

#define LIST_GLES1_ONLY_FUNCTIONS(X) \
  X(void, glAlphaFunc, (GLenum func, GLclampf ref)) \
  X(void, glBegin, (GLenum mode)) \
  X(void, glClearDepth, (GLclampd depth)) \
  X(void, glClientActiveTexture, (GLenum texture)) \
  X(void, glClipPlane, (GLenum plane, const GLdouble * equation)) \
  X(void, glColor4d, (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)) \
  X(void, glColor4f, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)) \
  X(void, glColor4fv, (const GLfloat * v)) \
  X(void, glColor4ub, (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)) \
  X(void, glColor4ubv, (const GLubyte * v)) \
  X(void, glColorPointer, (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)) \
  X(void, glDisableClientState, (GLenum array)) \
  X(void, glEnableClientState, (GLenum array)) \
  X(void, glEnd, ()) \
  X(void, glFogf, (GLenum pname, GLfloat param)) \
  X(void, glFogfv, (GLenum pname, const GLfloat * params)) \
  X(void, glFrustum, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)) \
  X(void, glGetClipPlane, (GLenum plane, GLdouble * equation)) \
  X(void, glGetDoublev, (GLenum pname, GLdouble * params)) \
  X(void, glGetLightfv, (GLenum light, GLenum pname, GLfloat * params)) \
  X(void, glGetMaterialfv, (GLenum face, GLenum pname, GLfloat * params)) \
  X(void, glGetPointerv, (GLenum pname, GLvoid* * params)) \
  X(void, glGetTexEnvfv, (GLenum target, GLenum pname, GLfloat * params)) \
  X(void, glGetTexEnviv, (GLenum target, GLenum pname, GLint * params)) \
  X(void, glLightf, (GLenum light, GLenum pname, GLfloat param)) \
  X(void, glLightfv, (GLenum light, GLenum pname, const GLfloat * params)) \
  X(void, glLightModelf, (GLenum pname, GLfloat param)) \
  X(void, glLightModelfv, (GLenum pname, const GLfloat * params)) \
  X(void, glLoadIdentity, ()) \
  X(void, glLoadMatrixf, (const GLfloat * m)) \
  X(void, glLogicOp, (GLenum opcode)) \
  X(void, glMaterialf, (GLenum face, GLenum pname, GLfloat param)) \
  X(void, glMaterialfv, (GLenum face, GLenum pname, const GLfloat * params)) \
  X(void, glMultiTexCoord2fv, (GLenum target, const GLfloat * v)) \
  X(void, glMultiTexCoord2sv, (GLenum target, const GLshort * v)) \
  X(void, glMultiTexCoord3fv, (GLenum target, const GLfloat * v)) \
  X(void, glMultiTexCoord3sv, (GLenum target, const GLshort * v)) \
  X(void, glMultiTexCoord4f, (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)) \
  X(void, glMultiTexCoord4fv, (GLenum target, const GLfloat * v)) \
  X(void, glMultiTexCoord4sv, (GLenum target, const GLshort * v)) \
  X(void, glMultMatrixf, (const GLfloat * m)) \
  X(void, glNormal3f, (GLfloat nx, GLfloat ny, GLfloat nz)) \
  X(void, glNormal3fv, (const GLfloat * v)) \
  X(void, glNormal3sv, (const GLshort * v)) \
  X(void, glOrtho, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)) \
  X(void, glPointParameterf, (GLenum param, GLfloat value)) \
  X(void, glPointParameterfv, (GLenum param, const GLfloat * values)) \
  X(void, glPointSize, (GLfloat size)) \
  X(void, glRotatef, (GLfloat angle, GLfloat x, GLfloat y, GLfloat z)) \
  X(void, glScalef, (GLfloat x, GLfloat y, GLfloat z)) \
  X(void, glTexEnvf, (GLenum target, GLenum pname, GLfloat param)) \
  X(void, glTexEnvfv, (GLenum target, GLenum pname, const GLfloat * params)) \
  X(void, glTexParameterf, (GLenum target, GLenum pname, GLfloat param)) \
  X(void, glTexParameterfv, (GLenum target, GLenum pname, const GLfloat * params)) \
  X(void, glMatrixMode, (GLenum mode)) \
  X(void, glNormalPointer, (GLenum type, GLsizei stride, const GLvoid * pointer)) \
  X(void, glPopMatrix, ()) \
  X(void, glPushMatrix, ()) \
  X(void, glShadeModel, (GLenum mode)) \
  X(void, glTexCoordPointer, (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)) \
  X(void, glTexEnvi, (GLenum target, GLenum pname, GLint param)) \
  X(void, glTexEnviv, (GLenum target, GLenum pname, const GLint * params)) \
  X(void, glTranslatef, (GLfloat x, GLfloat y, GLfloat z)) \
  X(void, glVertexPointer, (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)) \


#endif  // GLES1_ONLY_FUNCTIONS_H
