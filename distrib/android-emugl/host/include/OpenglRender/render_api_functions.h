// Auto-generated with: android/scripts/gen-entries.py --mode=funcargs distrib/android-emugl/host/libs/libOpenglRender/render_api.entries --output=distrib/android-emugl/host/include/OpenglRender/render_api_functions.h
// DO NOT EDIT THIS FILE

#ifndef RENDER_API_FUNCTIONS_H
#define RENDER_API_FUNCTIONS_H

#include "OpenglRender/render_api_platform_types.h"

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

/* list of constants to be passed to setStreamMode */
#define RENDER_API_STREAM_MODE_DEFAULT   0
#define RENDER_API_STREAM_MODE_TCP       1
#define RENDER_API_STREAM_MODE_UNIX      2
#define RENDER_API_STREAM_MODE_PIPE      3

typedef void (*OnPostFn)(void* context, int width, int height, int ydir,
                         int format, int type, unsigned char* pixels);
typedef void (*emugl_crash_func_t)(const char* format, ...);

#define LIST_RENDER_API_FUNCTIONS(X) \
  X(int, initLibrary, (), ()) \
  X(int, setStreamMode, (int mode), (mode)) \
  X(int, initOpenGLRenderer, (int width, int height, bool useSubWindow, char* addr, size_t addrLen, emugl_logger_struct logfuncs, emugl_crash_func_t crashfunc), (width, height, useSubWindow, addr, addrLen, logfuncs, crashfunc)) \
  X(void, getHardwareStrings, (const char** vendor, const char** renderer, const char** version), (vendor, renderer, version)) \
  X(void, setPostCallback, (OnPostFn onPost, void* onPostContext), (onPost, onPostContext)) \
  X(bool, showOpenGLSubwindow, (FBNativeWindowType window, int wx, int wy, int ww, int wh, int fbw, int fbh, float dpr, float zRot), (window, wx, wy, ww, wh, fbw, fbh, dpr, zRot)) \
  X(bool, destroyOpenGLSubwindow, (), ()) \
  X(void, setOpenGLDisplayRotation, (float zRot), (zRot)) \
  X(void, setOpenGLDisplayTranslation, (float px, float py), (px, py)) \
  X(void, repaintOpenGLDisplay, (), ()) \
  X(int, stopOpenGLRenderer, (), ()) \


#endif  // RENDER_API_FUNCTIONS_H
