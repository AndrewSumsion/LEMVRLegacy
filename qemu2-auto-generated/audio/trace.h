/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_AUDIO_GENERATED_TRACERS_H
#define TRACE_AUDIO_GENERATED_TRACERS_H

#include "qemu-common.h"
#include "trace/control.h"

extern TraceEvent _TRACE_ALSA_REVENTS_EVENT;
extern TraceEvent _TRACE_ALSA_POLLOUT_EVENT;
extern TraceEvent _TRACE_ALSA_SET_HANDLER_EVENT;
extern TraceEvent _TRACE_ALSA_WROTE_ZERO_EVENT;
extern TraceEvent _TRACE_ALSA_READ_ZERO_EVENT;
extern TraceEvent _TRACE_ALSA_XRUN_OUT_EVENT;
extern TraceEvent _TRACE_ALSA_XRUN_IN_EVENT;
extern TraceEvent _TRACE_ALSA_RESUME_OUT_EVENT;
extern TraceEvent _TRACE_ALSA_RESUME_IN_EVENT;
extern TraceEvent _TRACE_ALSA_NO_FRAMES_EVENT;
extern TraceEvent _TRACE_OSS_VERSION_EVENT;
extern TraceEvent _TRACE_OSS_INVALID_AVAILABLE_SIZE_EVENT;
extern uint16_t _TRACE_ALSA_REVENTS_DSTATE;
extern uint16_t _TRACE_ALSA_POLLOUT_DSTATE;
extern uint16_t _TRACE_ALSA_SET_HANDLER_DSTATE;
extern uint16_t _TRACE_ALSA_WROTE_ZERO_DSTATE;
extern uint16_t _TRACE_ALSA_READ_ZERO_DSTATE;
extern uint16_t _TRACE_ALSA_XRUN_OUT_DSTATE;
extern uint16_t _TRACE_ALSA_XRUN_IN_DSTATE;
extern uint16_t _TRACE_ALSA_RESUME_OUT_DSTATE;
extern uint16_t _TRACE_ALSA_RESUME_IN_DSTATE;
extern uint16_t _TRACE_ALSA_NO_FRAMES_DSTATE;
extern uint16_t _TRACE_OSS_VERSION_DSTATE;
extern uint16_t _TRACE_OSS_INVALID_AVAILABLE_SIZE_DSTATE;
#define TRACE_ALSA_REVENTS_ENABLED 1
#define TRACE_ALSA_POLLOUT_ENABLED 1
#define TRACE_ALSA_SET_HANDLER_ENABLED 1
#define TRACE_ALSA_WROTE_ZERO_ENABLED 1
#define TRACE_ALSA_READ_ZERO_ENABLED 1
#define TRACE_ALSA_XRUN_OUT_ENABLED 1
#define TRACE_ALSA_XRUN_IN_ENABLED 1
#define TRACE_ALSA_RESUME_OUT_ENABLED 1
#define TRACE_ALSA_RESUME_IN_ENABLED 1
#define TRACE_ALSA_NO_FRAMES_ENABLED 1
#define TRACE_OSS_VERSION_ENABLED 1
#define TRACE_OSS_INVALID_AVAILABLE_SIZE_ENABLED 1

#define TRACE_ALSA_REVENTS_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_revents(int revents)
{
}

static inline void trace_alsa_revents(int revents)
{
    if (true) {
        _nocheck__trace_alsa_revents(revents);
    }
}

#define TRACE_ALSA_POLLOUT_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_pollout(int i, int fd)
{
}

static inline void trace_alsa_pollout(int i, int fd)
{
    if (true) {
        _nocheck__trace_alsa_pollout(i, fd);
    }
}

#define TRACE_ALSA_SET_HANDLER_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_set_handler(int events, int index, int fd, int err)
{
}

static inline void trace_alsa_set_handler(int events, int index, int fd, int err)
{
    if (true) {
        _nocheck__trace_alsa_set_handler(events, index, fd, err);
    }
}

#define TRACE_ALSA_WROTE_ZERO_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_wrote_zero(int len)
{
}

static inline void trace_alsa_wrote_zero(int len)
{
    if (true) {
        _nocheck__trace_alsa_wrote_zero(len);
    }
}

#define TRACE_ALSA_READ_ZERO_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_read_zero(long len)
{
}

static inline void trace_alsa_read_zero(long len)
{
    if (true) {
        _nocheck__trace_alsa_read_zero(len);
    }
}

#define TRACE_ALSA_XRUN_OUT_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_xrun_out(void)
{
}

static inline void trace_alsa_xrun_out(void)
{
    if (true) {
        _nocheck__trace_alsa_xrun_out();
    }
}

#define TRACE_ALSA_XRUN_IN_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_xrun_in(void)
{
}

static inline void trace_alsa_xrun_in(void)
{
    if (true) {
        _nocheck__trace_alsa_xrun_in();
    }
}

#define TRACE_ALSA_RESUME_OUT_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_resume_out(void)
{
}

static inline void trace_alsa_resume_out(void)
{
    if (true) {
        _nocheck__trace_alsa_resume_out();
    }
}

#define TRACE_ALSA_RESUME_IN_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_resume_in(void)
{
}

static inline void trace_alsa_resume_in(void)
{
    if (true) {
        _nocheck__trace_alsa_resume_in();
    }
}

#define TRACE_ALSA_NO_FRAMES_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_alsa_no_frames(int state)
{
}

static inline void trace_alsa_no_frames(int state)
{
    if (true) {
        _nocheck__trace_alsa_no_frames(state);
    }
}

#define TRACE_OSS_VERSION_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_oss_version(int version)
{
}

static inline void trace_oss_version(int version)
{
    if (true) {
        _nocheck__trace_oss_version(version);
    }
}

#define TRACE_OSS_INVALID_AVAILABLE_SIZE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_oss_invalid_available_size(int size, int bufsize)
{
}

static inline void trace_oss_invalid_available_size(int size, int bufsize)
{
    if (true) {
        _nocheck__trace_oss_invalid_available_size(size, bufsize);
    }
}
#endif /* TRACE_AUDIO_GENERATED_TRACERS_H */
