/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_HW_DMA_GENERATED_TRACERS_H
#define TRACE_HW_DMA_GENERATED_TRACERS_H

#include "qemu-common.h"
#include "trace/control.h"

extern TraceEvent _TRACE_JAZZIO_READ_EVENT;
extern TraceEvent _TRACE_JAZZIO_WRITE_EVENT;
extern TraceEvent _TRACE_RC4030_READ_EVENT;
extern TraceEvent _TRACE_RC4030_WRITE_EVENT;
extern TraceEvent _TRACE_LEDMA_MEMORY_READ_EVENT;
extern TraceEvent _TRACE_LEDMA_MEMORY_WRITE_EVENT;
extern TraceEvent _TRACE_SPARC32_DMA_SET_IRQ_RAISE_EVENT;
extern TraceEvent _TRACE_SPARC32_DMA_SET_IRQ_LOWER_EVENT;
extern TraceEvent _TRACE_ESPDMA_MEMORY_READ_EVENT;
extern TraceEvent _TRACE_ESPDMA_MEMORY_WRITE_EVENT;
extern TraceEvent _TRACE_SPARC32_DMA_MEM_READL_EVENT;
extern TraceEvent _TRACE_SPARC32_DMA_MEM_WRITEL_EVENT;
extern TraceEvent _TRACE_SPARC32_DMA_ENABLE_RAISE_EVENT;
extern TraceEvent _TRACE_SPARC32_DMA_ENABLE_LOWER_EVENT;
extern TraceEvent _TRACE_I8257_UNREGISTERED_DMA_EVENT;
extern uint16_t _TRACE_JAZZIO_READ_DSTATE;
extern uint16_t _TRACE_JAZZIO_WRITE_DSTATE;
extern uint16_t _TRACE_RC4030_READ_DSTATE;
extern uint16_t _TRACE_RC4030_WRITE_DSTATE;
extern uint16_t _TRACE_LEDMA_MEMORY_READ_DSTATE;
extern uint16_t _TRACE_LEDMA_MEMORY_WRITE_DSTATE;
extern uint16_t _TRACE_SPARC32_DMA_SET_IRQ_RAISE_DSTATE;
extern uint16_t _TRACE_SPARC32_DMA_SET_IRQ_LOWER_DSTATE;
extern uint16_t _TRACE_ESPDMA_MEMORY_READ_DSTATE;
extern uint16_t _TRACE_ESPDMA_MEMORY_WRITE_DSTATE;
extern uint16_t _TRACE_SPARC32_DMA_MEM_READL_DSTATE;
extern uint16_t _TRACE_SPARC32_DMA_MEM_WRITEL_DSTATE;
extern uint16_t _TRACE_SPARC32_DMA_ENABLE_RAISE_DSTATE;
extern uint16_t _TRACE_SPARC32_DMA_ENABLE_LOWER_DSTATE;
extern uint16_t _TRACE_I8257_UNREGISTERED_DMA_DSTATE;
#define TRACE_JAZZIO_READ_ENABLED 1
#define TRACE_JAZZIO_WRITE_ENABLED 1
#define TRACE_RC4030_READ_ENABLED 1
#define TRACE_RC4030_WRITE_ENABLED 1
#define TRACE_LEDMA_MEMORY_READ_ENABLED 1
#define TRACE_LEDMA_MEMORY_WRITE_ENABLED 1
#define TRACE_SPARC32_DMA_SET_IRQ_RAISE_ENABLED 1
#define TRACE_SPARC32_DMA_SET_IRQ_LOWER_ENABLED 1
#define TRACE_ESPDMA_MEMORY_READ_ENABLED 1
#define TRACE_ESPDMA_MEMORY_WRITE_ENABLED 1
#define TRACE_SPARC32_DMA_MEM_READL_ENABLED 1
#define TRACE_SPARC32_DMA_MEM_WRITEL_ENABLED 1
#define TRACE_SPARC32_DMA_ENABLE_RAISE_ENABLED 1
#define TRACE_SPARC32_DMA_ENABLE_LOWER_ENABLED 1
#define TRACE_I8257_UNREGISTERED_DMA_ENABLED 1

#define TRACE_JAZZIO_READ_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_jazzio_read(uint64_t addr, uint32_t ret)
{
}

static inline void trace_jazzio_read(uint64_t addr, uint32_t ret)
{
    if (true) {
        _nocheck__trace_jazzio_read(addr, ret);
    }
}

#define TRACE_JAZZIO_WRITE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_jazzio_write(uint64_t addr, uint32_t val)
{
}

static inline void trace_jazzio_write(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_jazzio_write(addr, val);
    }
}

#define TRACE_RC4030_READ_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_rc4030_read(uint64_t addr, uint32_t ret)
{
}

static inline void trace_rc4030_read(uint64_t addr, uint32_t ret)
{
    if (true) {
        _nocheck__trace_rc4030_read(addr, ret);
    }
}

#define TRACE_RC4030_WRITE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_rc4030_write(uint64_t addr, uint32_t val)
{
}

static inline void trace_rc4030_write(uint64_t addr, uint32_t val)
{
    if (true) {
        _nocheck__trace_rc4030_write(addr, val);
    }
}

#define TRACE_LEDMA_MEMORY_READ_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_ledma_memory_read(uint64_t addr, int len)
{
}

static inline void trace_ledma_memory_read(uint64_t addr, int len)
{
    if (true) {
        _nocheck__trace_ledma_memory_read(addr, len);
    }
}

#define TRACE_LEDMA_MEMORY_WRITE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_ledma_memory_write(uint64_t addr, int len)
{
}

static inline void trace_ledma_memory_write(uint64_t addr, int len)
{
    if (true) {
        _nocheck__trace_ledma_memory_write(addr, len);
    }
}

#define TRACE_SPARC32_DMA_SET_IRQ_RAISE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_sparc32_dma_set_irq_raise(void)
{
}

static inline void trace_sparc32_dma_set_irq_raise(void)
{
    if (true) {
        _nocheck__trace_sparc32_dma_set_irq_raise();
    }
}

#define TRACE_SPARC32_DMA_SET_IRQ_LOWER_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_sparc32_dma_set_irq_lower(void)
{
}

static inline void trace_sparc32_dma_set_irq_lower(void)
{
    if (true) {
        _nocheck__trace_sparc32_dma_set_irq_lower();
    }
}

#define TRACE_ESPDMA_MEMORY_READ_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_espdma_memory_read(uint32_t addr, int len)
{
}

static inline void trace_espdma_memory_read(uint32_t addr, int len)
{
    if (true) {
        _nocheck__trace_espdma_memory_read(addr, len);
    }
}

#define TRACE_ESPDMA_MEMORY_WRITE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_espdma_memory_write(uint32_t addr, int len)
{
}

static inline void trace_espdma_memory_write(uint32_t addr, int len)
{
    if (true) {
        _nocheck__trace_espdma_memory_write(addr, len);
    }
}

#define TRACE_SPARC32_DMA_MEM_READL_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_sparc32_dma_mem_readl(uint64_t addr, uint32_t ret)
{
}

static inline void trace_sparc32_dma_mem_readl(uint64_t addr, uint32_t ret)
{
    if (true) {
        _nocheck__trace_sparc32_dma_mem_readl(addr, ret);
    }
}

#define TRACE_SPARC32_DMA_MEM_WRITEL_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_sparc32_dma_mem_writel(uint64_t addr, uint32_t old, uint32_t val)
{
}

static inline void trace_sparc32_dma_mem_writel(uint64_t addr, uint32_t old, uint32_t val)
{
    if (true) {
        _nocheck__trace_sparc32_dma_mem_writel(addr, old, val);
    }
}

#define TRACE_SPARC32_DMA_ENABLE_RAISE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_sparc32_dma_enable_raise(void)
{
}

static inline void trace_sparc32_dma_enable_raise(void)
{
    if (true) {
        _nocheck__trace_sparc32_dma_enable_raise();
    }
}

#define TRACE_SPARC32_DMA_ENABLE_LOWER_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_sparc32_dma_enable_lower(void)
{
}

static inline void trace_sparc32_dma_enable_lower(void)
{
    if (true) {
        _nocheck__trace_sparc32_dma_enable_lower();
    }
}

#define TRACE_I8257_UNREGISTERED_DMA_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_i8257_unregistered_dma(int nchan, int dma_pos, int dma_len)
{
}

static inline void trace_i8257_unregistered_dma(int nchan, int dma_pos, int dma_len)
{
    if (true) {
        _nocheck__trace_i8257_unregistered_dma(nchan, dma_pos, dma_len);
    }
}
#endif /* TRACE_HW_DMA_GENERATED_TRACERS_H */
