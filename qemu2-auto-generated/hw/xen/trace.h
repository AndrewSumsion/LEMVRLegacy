/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_HW_XEN_GENERATED_TRACERS_H
#define TRACE_HW_XEN_GENERATED_TRACERS_H

#include "qemu-common.h"
#include "trace/control.h"

extern TraceEvent _TRACE_XEN_DEFAULT_IOREQ_SERVER_EVENT;
extern TraceEvent _TRACE_XEN_IOREQ_SERVER_CREATE_EVENT;
extern TraceEvent _TRACE_XEN_IOREQ_SERVER_DESTROY_EVENT;
extern TraceEvent _TRACE_XEN_IOREQ_SERVER_STATE_EVENT;
extern TraceEvent _TRACE_XEN_MAP_MMIO_RANGE_EVENT;
extern TraceEvent _TRACE_XEN_UNMAP_MMIO_RANGE_EVENT;
extern TraceEvent _TRACE_XEN_MAP_PORTIO_RANGE_EVENT;
extern TraceEvent _TRACE_XEN_UNMAP_PORTIO_RANGE_EVENT;
extern TraceEvent _TRACE_XEN_MAP_PCIDEV_EVENT;
extern TraceEvent _TRACE_XEN_UNMAP_PCIDEV_EVENT;
extern TraceEvent _TRACE_XEN_DOMID_RESTRICT_EVENT;
extern uint16_t _TRACE_XEN_DEFAULT_IOREQ_SERVER_DSTATE;
extern uint16_t _TRACE_XEN_IOREQ_SERVER_CREATE_DSTATE;
extern uint16_t _TRACE_XEN_IOREQ_SERVER_DESTROY_DSTATE;
extern uint16_t _TRACE_XEN_IOREQ_SERVER_STATE_DSTATE;
extern uint16_t _TRACE_XEN_MAP_MMIO_RANGE_DSTATE;
extern uint16_t _TRACE_XEN_UNMAP_MMIO_RANGE_DSTATE;
extern uint16_t _TRACE_XEN_MAP_PORTIO_RANGE_DSTATE;
extern uint16_t _TRACE_XEN_UNMAP_PORTIO_RANGE_DSTATE;
extern uint16_t _TRACE_XEN_MAP_PCIDEV_DSTATE;
extern uint16_t _TRACE_XEN_UNMAP_PCIDEV_DSTATE;
extern uint16_t _TRACE_XEN_DOMID_RESTRICT_DSTATE;
#define TRACE_XEN_DEFAULT_IOREQ_SERVER_ENABLED 1
#define TRACE_XEN_IOREQ_SERVER_CREATE_ENABLED 1
#define TRACE_XEN_IOREQ_SERVER_DESTROY_ENABLED 1
#define TRACE_XEN_IOREQ_SERVER_STATE_ENABLED 1
#define TRACE_XEN_MAP_MMIO_RANGE_ENABLED 1
#define TRACE_XEN_UNMAP_MMIO_RANGE_ENABLED 1
#define TRACE_XEN_MAP_PORTIO_RANGE_ENABLED 1
#define TRACE_XEN_UNMAP_PORTIO_RANGE_ENABLED 1
#define TRACE_XEN_MAP_PCIDEV_ENABLED 1
#define TRACE_XEN_UNMAP_PCIDEV_ENABLED 1
#define TRACE_XEN_DOMID_RESTRICT_ENABLED 1

#define TRACE_XEN_DEFAULT_IOREQ_SERVER_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_default_ioreq_server(void)
{
}

static inline void trace_xen_default_ioreq_server(void)
{
    if (true) {
        _nocheck__trace_xen_default_ioreq_server();
    }
}

#define TRACE_XEN_IOREQ_SERVER_CREATE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_ioreq_server_create(uint32_t id)
{
}

static inline void trace_xen_ioreq_server_create(uint32_t id)
{
    if (true) {
        _nocheck__trace_xen_ioreq_server_create(id);
    }
}

#define TRACE_XEN_IOREQ_SERVER_DESTROY_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_ioreq_server_destroy(uint32_t id)
{
}

static inline void trace_xen_ioreq_server_destroy(uint32_t id)
{
    if (true) {
        _nocheck__trace_xen_ioreq_server_destroy(id);
    }
}

#define TRACE_XEN_IOREQ_SERVER_STATE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_ioreq_server_state(uint32_t id, bool enable)
{
}

static inline void trace_xen_ioreq_server_state(uint32_t id, bool enable)
{
    if (true) {
        _nocheck__trace_xen_ioreq_server_state(id, enable);
    }
}

#define TRACE_XEN_MAP_MMIO_RANGE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_map_mmio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
}

static inline void trace_xen_map_mmio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
    if (true) {
        _nocheck__trace_xen_map_mmio_range(id, start_addr, end_addr);
    }
}

#define TRACE_XEN_UNMAP_MMIO_RANGE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_unmap_mmio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
}

static inline void trace_xen_unmap_mmio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
    if (true) {
        _nocheck__trace_xen_unmap_mmio_range(id, start_addr, end_addr);
    }
}

#define TRACE_XEN_MAP_PORTIO_RANGE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_map_portio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
}

static inline void trace_xen_map_portio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
    if (true) {
        _nocheck__trace_xen_map_portio_range(id, start_addr, end_addr);
    }
}

#define TRACE_XEN_UNMAP_PORTIO_RANGE_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_unmap_portio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
}

static inline void trace_xen_unmap_portio_range(uint32_t id, uint64_t start_addr, uint64_t end_addr)
{
    if (true) {
        _nocheck__trace_xen_unmap_portio_range(id, start_addr, end_addr);
    }
}

#define TRACE_XEN_MAP_PCIDEV_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_map_pcidev(uint32_t id, uint8_t bus, uint8_t dev, uint8_t func)
{
}

static inline void trace_xen_map_pcidev(uint32_t id, uint8_t bus, uint8_t dev, uint8_t func)
{
    if (true) {
        _nocheck__trace_xen_map_pcidev(id, bus, dev, func);
    }
}

#define TRACE_XEN_UNMAP_PCIDEV_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_unmap_pcidev(uint32_t id, uint8_t bus, uint8_t dev, uint8_t func)
{
}

static inline void trace_xen_unmap_pcidev(uint32_t id, uint8_t bus, uint8_t dev, uint8_t func)
{
    if (true) {
        _nocheck__trace_xen_unmap_pcidev(id, bus, dev, func);
    }
}

#define TRACE_XEN_DOMID_RESTRICT_BACKEND_DSTATE() ( \
    false)

static inline void _nocheck__trace_xen_domid_restrict(int err)
{
}

static inline void trace_xen_domid_restrict(int err)
{
    if (true) {
        _nocheck__trace_xen_domid_restrict(err);
    }
}
#endif /* TRACE_HW_XEN_GENERATED_TRACERS_H */
