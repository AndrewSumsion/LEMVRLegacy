syntax = "proto2";

package offworld;

enum ModuleName {
  UNKNOWN = 0;
  SNAPSHOT = 1;
  AR_TESTING = 2; // TODO jwmcglynn@: rename it as you like
}

message GuestSend {
  message ModuleSnapshot {
    message CreateCheckpoint {
      optional string snapshot_name = 1;
    }
    message GotoCheckpoint {
      optional string snapshot_name = 1;
      optional bytes metadata = 2;
    }
    oneof function {
      CreateCheckpoint create_checkpoint_param = 1;
      GotoCheckpoint goto_checkpoint_param = 2;
    }
  }
  message ModuleArTesting { // TODO
  }
  optional int32 version = 1;
  oneof module {
    ModuleSnapshot snapshot = 2;
    ModuleArTesting ar_testing = 3;
  }
}

// Most of the time we don't use GuestRecv. Instead we directly use the
// function parameter messages because the function knows what is supposed
// to be returned from the pipe.

message GuestRecv {
  message ModuleSnapshot {
    message CreateCheckpoint {
      optional bytes metadata = 1;
    }
    message GotoCheckpoint {
    }
    oneof function {
      CreateCheckpoint create_checkpoint_param = 1;
      GotoCheckpoint goto_checkpoint_param = 2;
    }
  }
  message ModuleArTesting { // TODO
  }
  optional int32 version = 1;
  oneof module {
    ModuleSnapshot snapshot = 2;
    ModuleArTesting arTesting = 3;
  }
}
