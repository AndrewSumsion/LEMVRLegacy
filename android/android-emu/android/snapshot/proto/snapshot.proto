syntax = "proto2";

package emulator_snapshot;

message Image {
    enum Type {
        IMAGE_TYPE_UNKNOWN = 0;
        IMAGE_TYPE_KERNEL = 1;
        IMAGE_TYPE_KERNEL_RANCHU = 2;
        IMAGE_TYPE_SYSTEM = 3;
        IMAGE_TYPE_SYSTEM_COPY = 4;
        IMAGE_TYPE_DATA = 5;
        IMAGE_TYPE_DATA_COPY = 6;
        IMAGE_TYPE_RAMDISK = 7;
        IMAGE_TYPE_SDCARD = 8;
        IMAGE_TYPE_CACHE = 9;
        IMAGE_TYPE_VENDOR = 10;
        IMAGE_TYPE_ENCRYPTION_KEY = 11;
    }

    optional Type type = 1;
    optional string path = 2;
    optional bool present = 3;
    optional int64 size = 4;
    optional int64 modification_time = 5;
}

message Host {
    optional string gpu_driver = 4;
    optional int32 hypervisor = 5;
}

message Config {
    // Features are int32, not enums here to make sure we don't have to update
    // one more protobuf definition with every single new feature flag, even
    // when the code doesn't really care about the actual meaning for them,
    // only for the values.
    repeated int32 enabled_features = 1;

    // This holds the renderer; int32 for the same reason as |enabled_features|.
    optional int32 selected_renderer = 2;

    optional int32 cpu_core_count = 3;
    optional int64 ram_size_bytes = 4;
}

message Snapshot {
    // Update every time when introducing some breaking changes that make the
    // previous loading code break when trying to load the new snapshot.
    // NOTE: if the old code is fine with just skipping the new fields or not
    //       getting the meaning of new values, |version| should remain
    //       unchanged.
    optional int32 version = 1;

    // Purely informative: when this snapshot was created, Unix timestamp.
    optional int64 creation_time = 2;

    // List of mounted disk images used during the snapshot creation.
    repeated Image images = 3;

    // Description of the host machine properties needed to load this snapshot.
    optional Host host = 4;

    // Description of the emulator configuration needed for this snapshot.
    // NOTE: try not to duplicate the configuration that's already in
    //       hardware-qemu.ini; only add what's either not there or what
    //       could've been overridden during process initialization.
    optional Config config = 5;

    // Set if the snapshot failed to load during the last attempt.
    // Code is up to the application to define, with 0 meaning 'not failed' just
    // in case.
    optional int64 failed_to_load_reason_code = 7;

    // Set if data image is mounted.
    // User build and userdebug build mount data partition at different time.
    // But it should be done before boot finished, so this field is very likely
    // to be true.
    // We snapshot it here just in case someday we support snapshot during
    // booting.
    optional bool guest_data_partition_mounted = 8;
}
