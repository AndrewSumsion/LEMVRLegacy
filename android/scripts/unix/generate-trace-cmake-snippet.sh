#!/bin/sh
generate_trace() {
  local OUT=$1
  local GROUP=$2
  local FORMAT=$3
  local TRACEFILE=$(dirname $4)
  echo "generate_trace(GROUP ${GROUP} FORMAT ${FORMAT} BACKEND \${traces_BACKEND} SRC_DIR ${TRACEFILE} DEST \${traces_DEST}/${OUT} GENERATED TRACE_SRC)"
  #make_if_not_exists $(dirname $QEMU2_AUTOGENERATED_DIR/$OUT)
  #python $QEMU2_TOP_DIR/scripts/tracetool.py \
  #  --group=$GROUP --format=$FORMAT --backends=$QEMU2_TRACE $TRACEFILE > $QEMU2_AUTOGENERATED_DIR/$OUT || panic "Failed to generate trace $OUT from $TRACEFILE"
}

LINES=$(find . -type f -iname 'trace-events')
for LINE in $LINES; do
    TRACE=$(echo ${LINE} | sed 's/\.\///')
    DIR=$(dirname $TRACE)
    NAME=$(echo ${DIR} | sed 's/\//_/g' | sed 's/-/_/g')
    if [ "${NAME}" = "." ]; then
        # Special case root
        generate_trace trace-root.c root c trace-events
        generate_trace trace-root.h root h trace-events
        generate_trace trace/generated-helpers-wrappers.h root tcg-helper-wrapper-h trace-events
        generate_trace trace/generated-helpers.c root tcg-helper-c trace-events
        generate_trace trace/generated-helpers.h root tcg-helper-h trace-events
        generate_trace trace/generated-tcg-tracers.h root tcg-h trace-events
    else
       generate_trace $DIR/trace.h $NAME h $TRACE
       generate_trace $DIR/trace.c $NAME c $TRACE
    fi
done

SUPPORTED_CPUS="i386 aarch64 arm"
for CPU in $SUPPORTED_CPUS; do
  generate_trace target/$CPU/generated-helpers.c root tcg-helper-c trace-events
  generate_trace target/$CPU/generated-helpers.h root tcg-helper-h trace-events
done
